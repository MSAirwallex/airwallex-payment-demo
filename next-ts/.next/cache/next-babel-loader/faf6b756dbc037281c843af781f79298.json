{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"/Users/josie.ku/awx/airwallex-payment-demo/next-ts/pages/card/index.tsx\";\nimport { useEffect } from 'react';\nimport { createElement, loadAirwallex, getElement, confirmPaymentIntent } from 'airwallex-payment-elements';\nconst intent_id = 'int_b5kp97kpz9ODYfJBPzsy0iQbFgX';\nconst client_secret = 'eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDkzOTI4MDcsImV4cCI6MTYwOTM5NjQwNywiYWNjb3VudF9pZCI6IjZkMzljOGU3LWQyY2EtNGQ0Yy04N2I5LWIzY2Y3MzNkNTU2ZSIsImRhdGFfY2VudGVyX3JlZ2lvbiI6IlVLIiwiaW50ZW50X2lkIjoiaW50X24xMHRxTXBRenZJMjBwd0JReklBQ1hYcVVabyJ9.yszCObRTB-dcyWFVXBb4GqrVgVqKAYH5Cah3a7vsqxI';\nconst ELEMENT_TYPE = 'card';\n\nfunction card() {\n  useEffect(() => {\n    loadAirwallex({\n      env: 'staging',\n      origin: window.location.origin\n    }).then(() => {\n      var _createElement;\n\n      (_createElement = createElement(ELEMENT_TYPE)) === null || _createElement === void 0 ? void 0 : _createElement.mount(ELEMENT_TYPE);\n    });\n\n    const onReady = event => {\n      /*\n      ... Handle event\n      */\n      console.log(`Elements ready with ${JSON.stringify(event.detail)}`);\n    };\n\n    window.addEventListener('onReady', onReady);\n    return () => {\n      window.removeEventListener('onReady', onReady);\n    };\n  });\n\n  const triggerConfirm = async () => {\n    try {\n      const cardNumberElement = getElement('card');\n\n      if (cardNumberElement) {\n        const confirmResult = await confirmPaymentIntent({\n          element: cardNumberElement,\n          id: intent_id,\n          client_secret,\n          payment_method_options: {\n            card: {\n              auto_capture: true\n            }\n          }\n        });\n        console.log(`confirm success with ${JSON.stringify(confirmResult)}`);\n      }\n    } catch (err) {\n      console.log(`confirm fail with ${JSON.stringify(err)}`);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Option #6: Card element integration\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      id: ELEMENT_TYPE\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: triggerConfirm,\n      style: {\n        marginTop: '8px'\n      },\n      children: \"Confirm\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\nexport default card;","map":{"version":3,"sources":["/Users/josie.ku/awx/airwallex-payment-demo/next-ts/pages/card/index.tsx"],"names":["useEffect","createElement","loadAirwallex","getElement","confirmPaymentIntent","intent_id","client_secret","ELEMENT_TYPE","card","env","origin","window","location","then","mount","onReady","event","console","log","JSON","stringify","detail","addEventListener","removeEventListener","triggerConfirm","cardNumberElement","confirmResult","element","id","payment_method_options","auto_capture","err","marginTop"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SACEC,aADF,EAEEC,aAFF,EAGEC,UAHF,EAIEC,oBAJF,QAMO,4BANP;AAQA,MAAMC,SAAS,GAAG,iCAAlB;AACA,MAAMC,aAAa,GAAG,uRAAtB;AACA,MAAMC,YAAyB,GAAG,MAAlC;;AAEA,SAASC,IAAT,GAAgB;AACdR,EAAAA,SAAS,CAAC,MAAM;AACdE,IAAAA,aAAa,CAAC;AACZO,MAAAA,GAAG,EAAE,SADO;AAEZC,MAAAA,MAAM,EAAEC,MAAM,CAACC,QAAP,CAAgBF;AAFZ,KAAD,CAAb,CAGGG,IAHH,CAGQ,MAAM;AAAA;;AACZ,wBAAAZ,aAAa,CAACM,YAAD,CAAb,kEAA6BO,KAA7B,CAAmCP,YAAnC;AACD,KALD;;AAOA,UAAMQ,OAAO,GAAIC,KAAD,IAAwB;AACtC;AACN;AACA;AACMC,MAAAA,OAAO,CAACC,GAAR,CAAa,uBAAsBC,IAAI,CAACC,SAAL,CAAeJ,KAAK,CAACK,MAArB,CAA6B,EAAhE;AACD,KALD;;AAOAV,IAAAA,MAAM,CAACW,gBAAP,CAAwB,SAAxB,EAAmCP,OAAnC;AACA,WAAO,MAAM;AACXJ,MAAAA,MAAM,CAACY,mBAAP,CAA2B,SAA3B,EAAsCR,OAAtC;AACD,KAFD;AAGD,GAnBQ,CAAT;;AAqBA,QAAMS,cAAc,GAAG,YAAY;AACjC,QAAI;AACF,YAAMC,iBAAiB,GAAGtB,UAAU,CAAC,MAAD,CAApC;;AACA,UAAIsB,iBAAJ,EAAuB;AACrB,cAAMC,aAAa,GAAG,MAAMtB,oBAAoB,CAAC;AAC/CuB,UAAAA,OAAO,EAAEF,iBADsC;AAE/CG,UAAAA,EAAE,EAAEvB,SAF2C;AAG/CC,UAAAA,aAH+C;AAI/CuB,UAAAA,sBAAsB,EAAE;AACtBrB,YAAAA,IAAI,EAAE;AACJsB,cAAAA,YAAY,EAAE;AADV;AADgB;AAJuB,SAAD,CAAhD;AAUAb,QAAAA,OAAO,CAACC,GAAR,CAAa,wBAAuBC,IAAI,CAACC,SAAL,CAAeM,aAAf,CAA8B,EAAlE;AACD;AACF,KAfD,CAeE,OAAOK,GAAP,EAAY;AACZd,MAAAA,OAAO,CAACC,GAAR,CAAa,qBAAoBC,IAAI,CAACC,SAAL,CAAeW,GAAf,CAAoB,EAArD;AACD;AACF,GAnBD;;AAqBA,sBACE;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,EAAE,EAAExB;AAAT;AAAA;AAAA;AAAA;AAAA,YAFF,eAGE;AAAQ,MAAA,OAAO,EAAEiB,cAAjB;AAAiC,MAAA,KAAK,EAAE;AAAEQ,QAAAA,SAAS,EAAE;AAAb,OAAxC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAHF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;AAED,eAAexB,IAAf","sourcesContent":["import { useEffect } from 'react';\nimport {\n  createElement,\n  loadAirwallex,\n  getElement,\n  confirmPaymentIntent,\n  ElementType,\n} from 'airwallex-payment-elements';\n\nconst intent_id = 'int_b5kp97kpz9ODYfJBPzsy0iQbFgX';\nconst client_secret = 'eyJhbGciOiJIUzI1NiJ9.eyJpYXQiOjE2MDkzOTI4MDcsImV4cCI6MTYwOTM5NjQwNywiYWNjb3VudF9pZCI6IjZkMzljOGU3LWQyY2EtNGQ0Yy04N2I5LWIzY2Y3MzNkNTU2ZSIsImRhdGFfY2VudGVyX3JlZ2lvbiI6IlVLIiwiaW50ZW50X2lkIjoiaW50X24xMHRxTXBRenZJMjBwd0JReklBQ1hYcVVabyJ9.yszCObRTB-dcyWFVXBb4GqrVgVqKAYH5Cah3a7vsqxI';\nconst ELEMENT_TYPE: ElementType = 'card';\n\nfunction card() {\n  useEffect(() => {\n    loadAirwallex({\n      env: 'staging',\n      origin: window.location.origin,\n    }).then(() => {\n      createElement(ELEMENT_TYPE)?.mount(ELEMENT_TYPE);\n    });\n\n    const onReady = (event: CustomEvent) => {\n      /*\n      ... Handle event\n    */\n      console.log(`Elements ready with ${JSON.stringify(event.detail)}`);\n    };\n\n    window.addEventListener('onReady', onReady as EventListener);\n    return () => {\n      window.removeEventListener('onReady', onReady as EventListener);\n    };\n  });\n\n  const triggerConfirm = async () => {\n    try {\n      const cardNumberElement = getElement('card');\n      if (cardNumberElement) {\n        const confirmResult = await confirmPaymentIntent({\n          element: cardNumberElement,\n          id: intent_id,\n          client_secret,\n          payment_method_options: {\n            card: {\n              auto_capture: true,\n            },\n          },\n        });\n        console.log(`confirm success with ${JSON.stringify(confirmResult)}`);\n      }\n    } catch (err) {\n      console.log(`confirm fail with ${JSON.stringify(err)}`);\n    }\n  };\n\n  return (\n    <div>\n      <h2>Option #6: Card element integration</h2>\n      <div id={ELEMENT_TYPE} />\n      <button onClick={triggerConfirm} style={{ marginTop: '8px' }}>\n        Confirm\n      </button>\n    </div>\n  );\n}\n\nexport default card;"]},"metadata":{},"sourceType":"module"}